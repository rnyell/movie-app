.hero-section {
  margin-block: var(--space-5);
  padding-inline: var(--space-7);
  width: 100%;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, auto);
  gap: 1rem;
}

.hero-movie {
  grid-column: 1 / 4;
  grid-row: 1 / -1;
}

.carousel-container {
  align-self: center;
  grid-column: 4 / 5;
  grid-row: 1 / 4;
}

.grid-container {
  container: grid-container / inline-size;
  padding: var(--space-6) var(--space-7);
  width: 100%;
  aspect-ratio: var(--poster-landscape-ratio);
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(5, 1fr);

  & .grid-item-title {
    grid-column: 2 / 6;
    grid-row: 2 / 4;
    width: 80%;
  }

  & .cta-btns {
    grid-column: 2 / 4;
    grid-row: 4 / 5;
    align-self: end;
  }

  & .tagline {
    grid-column: 2 / 5;
    grid-row: 1 / 2;
    align-self: start;
  }

  & .rate {
    grid-column: 1 / 2;
    grid-row: 3 / 4;
    align-self: end;
    margin-bottom: 3cqh;
  }

  & .director {
    grid-column: 1 / 2;
    grid-row: 4 / 5;
    align-self: center;
    margin-bottom: 3cqh;
  }

  /* & .casts {
    look at `casts.css` file
  } */

  & .btns {
    grid-column: -2 / -1;
    grid-row: 5 / 6;
    align-self: end;
    justify-self: end;
  }
}

.grid-container {
  position: relative;
  isolation: isolate;
  z-index: var(--z-0);

  & .title {
    width: fit-content;
    font-size: min(58px, 2.75rem);
    letter-spacing: 1.2px;
    line-height: 0.9;
    color: var(--color-neutral-200);
  }
  
  & .release-date {
    margin-top: 1.5cqw;
    padding: 0.25rem 0.5rem;
    display: inline-block;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-neutral-800);
    background-color: var(--color-neutral-200);
  }

  & .genres {
    margin-top: 1.5cqw;
    font-size: 0.75rem;
    color: var(--color-neutral-300);
  }

  & .tagline {
    padding-inline: 1cqw;
    width: fit-content;
    font-size: 0.9rem;
    color: var(--color-neutral-300);
  }

  & .rate .helper-div {
    display: inline-flex;
    /* `.rate` is a grid-item & flex-container at the same time,
        so "align-items" clashes... we need a helper-div */
    align-items: center;
    flex-flow: row-reverse;
    gap: 0.5rem;
    color: var(--color-neutral-200);

    & .icon {
      width: 2cqw;
      font-size: 0.75rem;

      & svg {
        stroke: var(--color-neutral-200);
        fill: var(--color-neutral-200);
      }
    }
  }

  & .director {
    & p:first-child {
      margin-bottom: 0.25cqw;
      font-size: 0.675rem;
      color: color-mix(in srgb, var(--color-neutral-300), var(--color-neutral-400));
    }

    & .director-name {
      font-weight: 500;
      color: var(--color-neutral-200);
    }
  }

  & .btn-shared {
    padding: 1.2cqw 1.5cqw;
    font-weight: 500;
    background-color: rgb(20 23 26 / 15%);
    backdrop-filter: blur(5px);
    border-radius: 0.7rem;
    border: var(--outline-size-1) solid var(--color-neutral-400);
    transition: background-color var(--duration-1) ease-in,
      border-color var(--duration-1) ease-in;

    &:hover {
      color: var(--color-neutral-800);
      background-color: var(--color-neutral-300);
      border-color: var(--color-neutral-300);
    }

    & .icon {
      width: var(--icon-size-4);
    }

    & svg {
      transition: color var(--duration-1) ease-in;
    }
  }

  & .cta-btns {
    display: inline-flex;
    gap: 1.5cqw;
    font-size: 0.8rem;

    & .watch-btn {
      width: 6.5rem;
      grid-auto-flow: column;
      background-color: var(--color-accent-600);
      border-color: var(--color-accent-600);
      transition: background-color var(--duration-1) ease-in,
        border-color var(--duration-1) ease-in;

      &:hover {
        color: var(--color-neutral-800);
        background-color: var(--color-neutral-200);
        border-color: var(--color-neutral-200);
      }

      & span {
        margin-right: auto;
        transition: color var(--duration-1) ease-in;
      }

      & svg {
        stroke-width: 2;
        fill: currentColor;
      }
    }

    & .bookmark-btn {
      padding: 1.5cqw;
      height: max-content;

      & svg {
        transition: fill var(--duration-1) ease-in,
          color var(--duration-1) ease-in;
      }
    }

    & .bookmark-btn.is-bookmarked {
      color: var(--color-neutral-800);
      background-color: var(--color-neutral-200);

      & svg {
        fill: currentColor;
      }
    }
  }

  & .btns {
    display: inline-flex;
    gap: 1.5cqw;

    & button {
      padding: 1.5cqw;
      border-width: var(--outline-size-2);
    }

    & svg {
      width: var(--icon-size-4);
      stroke-width: 1.75;
      transition: color var(--duration-1) ease-in;
    }
  }
}

& .carousel-container {
  --img-width: 10rem;
  --gap: 1rem;
  position: relative;
}

& .carousel {
  position: relative;
  overflow: hidden;
  border-radius: 2rem;

  & .images-wrapper {
    height: calc((9rem / var(--poster-landscape-ratio) + var(--gap)) * 4);
  }

  & .images-list {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--gap);
  }

  & figure {
    flex-shrink: 0;
    width: var(--img-width);
    min-height: 80px; /* for JS */
    opacity: 0.375;
    scale: 0.925;
    transition: opacity var(--duration-1), scale var(--duration-1);
    cursor: pointer;

    &[data-view="true"] {
      opacity: 1;
      scale: 1;
      outline: var(--outline-size-3) var(--color-accent-300) solid;
      outline-offset: 5px;
      border-radius: 1.5rem;
    }

    img.poster {
      border-radius: 1.5rem;
    }
  }
}

.grid-container {
  & .bg-poster {
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: var(--z-neg10);
    inset: 0;
    background-size: cover;
    background-position: 50% 50%;
    border-radius: 2.75rem;
    outline: 1.25px solid rgba(120, 77, 240, 0.15);
    outline-offset: 0;
    box-shadow: 0 2px 0.75rem rgb(20 23 26 / 55%);

    &::after {
      content: "";
      position: absolute;
      z-index: var(--z-10);
      inset: 0;
      background-image: linear-gradient(
        190deg,
        rgb(20 23 26 / 60%) 10%,
        rgb(20 23 26 / 90%) 95%
      );
      border-radius: inherit;
    }
  }

  & .ambient {
    position: absolute;
    z-index: var(--z-neg10);
    inset: -0.65rem;
    opacity: 0.6;
    filter: blur(30px) grayscale(0.3);
  }

  & .ambient img {
    width: 100%;
    height: 100%;
    object-position: center;
    border-radius: 2.75rem;
  }
}

.swiper-container {
  grid-column: 1 / 6;
  grid-row: 1 / 4;
  padding-block: 1rem;
  height: 450px;
  overflow: hidden;
  
  & .swiper {
    width: 100%;
    height: 100%;
    position: relative;
  
    & .swiper-card {
      width: min(280px, 75%);
      position: absolute;
      top: 0;
    }

    & .swiper-card-content {
      overflow: hidden;
      /* position: relative;
      z-index: var(--z-0); */
      border-radius: 3rem;
      
      /* &::before {
        content: "";
        position: absolute;
        inset: 0;
        z-index: var(--z-neg10);
        background-color: var(--color-neutral-800);
      } */
      
      & img {
        /* position: relative; */
        /* z-index: var(--z-10); */
      }
    }

    & .front-card > .swiper-card-content {
      box-shadow: 0 6px 2rem 2px rgb(64 36 87 / 40%);
      /* box-shadow: 0 5px 2rem 2px #69172b72; */
    }
  }
}
