.search-page {
  display: grid;
  /** `minmax(auto, min(30vw, 300px))` this should  equal to <aside>'s width */
  grid-template-columns: minmax(auto, min(30vw, 300px)) 1fr;
  grid-template-rows: auto auto;

  & aside {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    margin-top: var(--space-8);
  }

  & main {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
    margin-top: var(--space-8);
  }
}

.search-page aside {
  width: min(30vw, 300px);
  height: 75vh;
  /* position: sticky; */
  position: fixed;
  top: 5rem;  /** <Header />'s height (which is â‰ˆ85px) */
  left: 0;
  font-size: 0.9rem;

  & input[type="checkbox"],
  & input[type="radio"] {
    width: 0;
    height: 0;
    opacity: 0;
  }
  
  & select {
    padding: 0 1rem;
    height: 2.25rem;
    font-size: 0.75rem;
    background-color: var(--color-neutral-600);
    border-radius: 1rem;
    box-shadow: 0 2px 0.75rem rgb(11 15 17 / 35%);
  }

  & option {
    border: 0;
  }
}

/* currently disable */
/* ................................... */
[data-feature-not-available] {
  cursor: not-allowed !important;
  opacity: 0.35;

  & div,
  & label,
  & select,
  & span {
    cursor: not-allowed !important;
  }
}

[for="release_date"],
[for="title"] {
  opacity: 0.35;
  cursor: not-allowed !important;
}
/* ................................... */
/* ................................... */

.side-filter {
  --outline-width: -1.5px;
  margin-top: var(--space-4);
  padding-block: var(--space-4);
  position: relative;
  background-image: linear-gradient(120deg, var(--color-neutral-700), var(--color-neutral-800));
  border-radius: 0 3rem 0 0;
  
  &::after {
    width: calc(100.35% - var(--outline-width));
    height: 55%;
    top: var(--outline-width);
    z-index: var(--z-neg5);
    border-radius: inherit;
    background-image: linear-gradient(120deg, var(--color-accent-600), transparent);
  }
  
  & .filter-card {
    margin-block: var(--space-3);
    padding-inline: var(--space-5);
    width: 100%;
    align-items: flex-start;
  }

  & .heading {
    margin-block: 0 var(--space-4);
    font-size: 1.05rem;
    color: var(--color-accent-100);
  }

  & .filter-card:has(.genres-box) {
    &::after {
      bottom: 0;
      width: 100%;
      height: 25px;
      background-image: linear-gradient(transparent, var(--color-neutral-750));
    }
  }
  
  & .genres-box {
    padding-bottom: 0.75rem;
    width: 100%;
    height: 7rem;
    overflow-y: scroll;
    scrollbar-width: none;
    display: flex;
    flex-flow: row wrap;
    gap: var(--space-2) var(--space-1);

    & label {
      padding: var(--space-2);
      font-size: 0.625rem;
      border: 1px solid var(--color-neutral-450);
      border-radius: var(--full-rounded);
      transition: background-color var(--duration-1) ease-in,
        color var(--duration-1) ease-in;
    }

    & label:hover,
    & label:has(:checked) {
      background-color: var(--color-neutral-350);
      color: var(--color-neutral-900);
      border-color: var(--color-neutral-350);
    }
  }

  & .date-box {
    gap: 0.75rem;

    & label {
      width: 100%;
      font-weight: 500;
    }

    & input {
      margin-inline: auto 3rem;
      padding: 0 1rem;
      width: 50%;
      height: 2.25rem;
      color: var(--color-neutral-200);
      font-size: 0.8rem;
      background-color: var(--color-neutral-600);
      border-radius: 1rem;
      box-shadow: 0 2px 0.75rem rgb(11 15 17 / 35%);
    }
  }

  & .lang-box {
    width: 100%;
    gap: 0.75rem;
    font-size: 0.8rem;

    & label {
      width: 100%;
    }

    & div:has(> select) {
      margin-inline: auto 0;
      width: 90px;

      /* to remove default arrow */
      &::after {
        pointer-events: none;
        height: 90%;
        width: 20px;
        right: 2px;
        top: 2px;
        background-color: var(--color-neutral-600);
        border-radius: 5rem;
      }
    }

    & select {
      width: 100%;
    }
  }
}

.type-filter {
  & .type-box {
    display: flex;
    gap: var(--space-2);

    & > span {
      min-width: 5.5rem;
      padding: 0.625rem;
      text-align: center;
      font-weight: 500;
      border: var(--outline-size-2) solid var(--color-neutral-400);
      border-radius: var(--full-rounded);
      cursor: pointer;
      transition: background-color var(--duration-1) ease-in,
        border-color var(--duration-1) ease-in,
        color var(--duration-1) ease-in;
    }

    & span:hover,
    & span.is-active {
      color: var(--color-neutral-800);
      background-color: var(--color-neutral-300);
      border-color: var(--color-neutral-300);
    }
  }
}

aside:has(> .heading) {
  padding-inline: var(--space-8); /* same as: `.search-page "main"` */
  display: flex;
  flex-direction: column;
  gap: 1rem;

  & .heading {
    align-self: flex-start;
    font-family: Georgia, serif;
  
    & span {
      margin-inline: var(--space-2);
      color: var(--color-accent-200);
      font-family: Ubuntu;
      letter-spacing: 0.0225em;

      &::selection {
        background-color: var(--color-neutral-100);
      }
    }
  }

  hr {
    width: 100%;
  }
}

.sm-filter {
  margin-top: var(--space-9);
  
  & .wrapper {
    display: inline-flex;
    gap: var(--space-2);
  }

  & .filter-dropdown,
  & .sort-dropdown {
    padding: 0.625rem var(--space-5);
    min-width: 6rem;
    position: relative;
    z-index: var(--z-20);
    display: inline-flex;
    column-gap: var(--space-2);
    border: var(--outline-size-2) solid var(--color-neutral-400);
    border-radius: var(--full-rounded);
    cursor: default;
    transition: background-color var(--duration-1) ease-in,
      border-color var(--duration-1) ease-in,
      color var(--duration-1) ease-in;

    &:hover,
    &.is-open {
      background-color: var(--color-neutral-500);
      border-color: var(--color-neutral-500);
    }
  }

  & .dropdown-box {
    padding: var(--space-5) var(--space-5);
    min-width: 17rem;
    position: absolute;
    top: calc(100% + 10px);
    left: 0;
    gap: 0.5rem;
    color: var(--color-neutral-300);
    background-color: var(--color-neutral-700);
    background-color: var(--color-neutral-650);
    border-radius: 1.5rem;
    box-shadow: 0 5px 0.5rem rgb(11 15 17 / 30%);

    & hr {
      border-color: var(--color-neutral-500);
    }

    & .group {
      margin-top: var(--space-4);
      gap: var(--space-3) var(--space-1);
    }

    & .type-filter {
      & .type-box {
        margin-top: var(--space-4);
        gap: var(--space-2);
      }
    }
    
    & .genre-filter {
      & span {
        padding: 0.35rem var(--space-2);
        font-size: 0.8rem;
        border: 1px solid var(--color-neutral-450);
        border-radius: 0.75rem;
        cursor: pointer;
      }

      & span:hover {
        background-color: var(--color-neutral-350);
        color: var(--color-neutral-800);
      }

      & span.is-active {
        color: var(--color-neutral-800);
        background-color: var(--color-neutral-300);
      }
    }
  }

  & div:has(> select) {
    margin-inline: auto 0;
    width: 90px;

    & select {
      width: 100%;
    }
  }  

  & .sort-dropdown {
    & label.is-active {
      font-weight: 500;
      color: var(--color-neutral-800);
      background-color: var(--color-neutral-350);
    }

    & .sort-options {
      & .group {
        gap: 0.5rem;
      }
    }

    & .sort-order {
      & .group {
        gap: 0.5rem;
      }

      & label {
        flex: 1;
        gap: 0.5rem;
      }
    }

    & label {
      padding: var(--space-3) var(--space-4);
      font-size: 0.95rem;
      background-color: var(--color-neutral-550);
      border-radius: 0.75rem;
      transition: background-color var(--duration-1) ease-in,
        color var(--duration-1) ease-in;
    }
  }

  & button {
    margin-top: var(--space-5);
    padding: var(--space-3) var(--space-4);
    border-radius: 1rem;
    background-color: var(--color-accent-600);
    color: var(--color-neutral-200);

    &:hover {
      background-color: var(--color-accent-500);
    }
  }
}

.selected-filters {
  /* overflow: hidden; */
  /* issue: "overflow: hidden" not working */
  /*? is there any way to make it work without fixed width? */
  width: calc(100vw - 4rem);

  [data-line] {
    margin-left: 0.75rem;
    width: 1px;
    background-color: var(--color-neutral-450);
  }

  & span {
    flex-shrink: 0; /* MF! */
    padding-inline: 0.675rem 0.25rem;
    padding-block: 0.275rem;
    overflow: hidden;
    gap: 0.625rem;
    font-size: 0.85rem;
    border: 1px solid var(--color-neutral-400);
    border-radius: var(--full-rounded);
    
    & .icon {
      margin-left: auto;
      padding: 5px;
      cursor: pointer;

      &::before {
        width: 1px;
        height: 200%;
        top: -1rem; left: 0;
        background-color: var(--color-neutral-500);
      }
    }

    & svg {
      min-width: 13px;
      width: var(--icon-size-4);
    }
  }

  & .slc-type {
    margin-right: 0.75rem;
  }

  & .slc-genres {
    padding-inline: 0.375rem;
    overflow-x: scroll;
    scrollbar-width: none;
    gap: 0.5rem;
  }
}

.search-page main {
  padding-inline: var(--space-8);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;

  & .heading {
    align-self: flex-start;
    font-family: Georgia, serif;
  
    & span {
      margin-inline: var(--space-2);
      color: var(--color-accent-200);
      font-family: Ubuntu;
      letter-spacing: 0.0225em;

      &::selection {
        background-color: var(--color-neutral-100);
      }
    }
  }

  & .type-filter {
    margin-top: var(--space-6);
    align-self: flex-start;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-around;
    font-size: 0.9rem;
  }
}

.results-container {
  margin-block: var(--space-4);
  width: 100%;
  max-width: 1200px;
}

.search-results {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(100%, 150px), 1fr));
  gap: 1.25rem 1.75rem;
  /* justify-items: center; */ /*? why images&layout brokes with this */

  /* & .movie-grid-item {
    min-width: 0;
  } */
}