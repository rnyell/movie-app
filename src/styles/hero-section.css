@layer main, effetcs, layout, queries;

@layer layout {
  .hero-section {
    margin-top: var(--space-5);
    padding-inline: var(--space-7);
    width: 100%;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, auto);
    gap: 1rem;
  }

  .hero-movie {
    grid-column: 1 / 4;
    grid-row: 1 / -1;
  }

  .carousel {
    align-self: center;
    grid-column: 4 / 5;
    grid-row: 1 / 4;
  }

  .grid-container {
    container: grid-container / inline-size;
    padding: var(--space-5);
    width: 100%;
    aspect-ratio: var(--base-poster-ratio);
    display: grid;
    grid-template-columns: 1fr 2fr max-content;
    grid-template-rows: repeat(4, 1fr);

    & .port-poster {
      grid-column: 3 / 4;
      grid-row: 2 / 4;
      justify-self: center;
      padding-right: 2cqw;
      display: none;
    }

    & .main-details {
      grid-column: 2 / 3;
      grid-row: 2 / 4;
    
      & .title {
        margin-top: 2cqw;
      }
    }

    & .tagline {
      grid-column: 2 / 3;
      grid-row: 1 / 2;
      align-self: start;
    }

    & .runtime {
      grid-column: 1 / 2;
      grid-row: 2 / 3;
      align-self: end;
      margin-bottom: 2cqw;
      padding-left: 2cqw;
    }

    & .rate {
      grid-column: 1 / 2;
      grid-row: 3 / 4;
      align-self: center;
      padding-left: 2cqw;
      margin-bottom: 10cqw;
    }

    & .director {
      grid-column: 1 / 2;
      grid-row: 3 / 4;
      align-self: end;
      margin-bottom: 2cqw;
      padding-left: 2cqw;
    }

    & .casts {
      grid-column: 1 / 2;
      grid-row: 4 / 5;
      align-self: end;
      padding-left: 2cqw;
    }

    & .btns {
      grid-column: 3 / 4;
      grid-row: 4 / 5;
      align-self: end;
      margin-bottom: 2cqw;
      padding-right: 2cqw;
    }
  }
}

@layer main {
  .grid-container {
    position: relative;
    isolation: isolate;
    z-index: var(--z-0);

    & .port-poster {
      & .poster-xs {
        width: max(12cqw + 2rem, 100px);
        border-radius: 1rem;
      }
    }

    & .title {
      width: fit-content;
      font-size: min(60px, 2.875rem);
      letter-spacing: 1.2px;
      line-height: 0.9;
      color: var(--color-neutral-200);
    }
    
    & .release-date {
      margin-top: 1.5cqw;
      padding: 0.25rem 0.5rem;
      display: inline-block;
      font-size: 1.25rem;
      font-weight: 600;
      color: var(--color-neutral-800);
      background-color: var(--color-neutral-200);
    }

    & .genres {
      margin-top: 1.5cqw;
      font-size: 0.75rem;
      color: var(--color-neutral-300);
    }

    & .tagline {
      padding-inline: 1cqw;
      width: fit-content;
      font-size: 0.9rem;
      color: var(--color-neutral-300);
    }

    & .runtime {
      font-size: 0.75rem;
      font-weight: 500;
      color: var(--color-neutral-300);
    }

    & .rate .helper-div {
      display: inline-flex;
      /* `.rate` is a grid-item & flex-container at the same time,
          so "align-items" clashes... we need a helper-div */
      align-items: center;
      flex-flow: row-reverse;
      gap: 0.5rem;
      color: var(--color-neutral-200);

      & .icon {
        width: 2cqw;
        font-size: 0.75rem;

        & svg {
          stroke: var(--color-neutral-200);
          fill: var(--color-neutral-200);
        }
      }
    }

    & .director {
      & p:first-child {
        margin-bottom: 0.25cqw;
        font-size: 0.675rem;
        color: color-mix(in srgb, var(--color-neutral-300), var(--color-neutral-400));
      }

      & .director-name {
        font-weight: 500;
        color: var(--color-neutral-200);
      }
    }

    & .casts h5 {
      margin-bottom: 1.5cqw;
      font-size: 1rem;
      font-weight: 400;
      font-family: Montserrat;
      /* color: color-mix(in srgb, var(--color-neutral-300), var(--color-neutral-400)); */
    }

    & .casts-list {
      width: 200px; /*! hacky fix */
      /* now, basically this defines the col-track's width of its parent's grid-container */
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;
      gap: 2cqw;

      &.show-more .cast-name {
        visibility: visible;
      }

      & > * {
        flex-shrink: 0;
      }

      & .cast-img, & button {
        width: max(3.5cqw + 1rem, 40px);
        aspect-ratio: 1;
        border-radius: var(--rounded-full);
        outline: 2.5px solid var(--color-neutral-700);
        outline-offset: 0;
      }

      & .cast {
        flex-basis: 5cqw;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        border-radius: var(--rounded-full);

        &:first-child {
          /** to override framer-motion inline style */
          margin-left: 0 !important;
        }
      }

      & .cast-img {
        object-position: 0 15%;
        user-select: none;
      }

      & .cast-name {
        max-width: 70px;
        width: fit-content;
        max-height: 1.25rem;
        visibility: hidden;
        font-size: 0.5rem;
      }

      & button {
        display: inline-grid;
        place-items: center;
        font-size: 1rem;
        background-color: rgb(20 23 26 / 35%);
        backdrop-filter: blur(2px);

        & .icon {
          width: var(--icon-size-3);
          color: var(--color-neutral-300);
        }
      }
    }

    & .btns {
      display: inline-flex;
      gap: 1.75cqw;

      & button {
        padding: 0.25cqw 4cqw;
        background-color: rgb(20 23 26 / 15%);
        backdrop-filter: blur(3px);
        border: var(--outline-size-1) solid var(--color-neutral-300);
        transition: background-color var(--duration-1) ease-in;
  
        & svg {
          width: var(--icon-size-8);
          stroke-width: 1.225;
          transition: color var(--duration-1) ease-in;
        }
      }
  
      & button:hover {
        background-color: var(--color-neutral-300);
  
        & svg {
          color: var(--color-neutral-800);
        }
      }
    }
  }

  & .carousel {
    --img-width: 10rem;
    --gap: 1rem;
    position: relative;
    overflow: hidden;
    border-radius: 2rem;
  
    & button {
      width: 100%;
      height: 2rem;
      position: absolute;
      background-image: radial-gradient(
        circle, rgb(12 17 20 / 75%), rgb(12 17 20 / 5%) 30%, transparent 100%
      );
      cursor: pointer;
      
      &.up-btn {
        top: 0;
      }
  
      &.down-btn {
        bottom: 0;
      }
  
      & svg {
        width: var(--icon-size-5);
      }
    }
  
  
    & .images-wrapper {
      height: calc((9rem / var(--base-poster-ratio) + var(--gap)) * 4);
    }
  
    & .images-list {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--gap);
    }
  
    & figure {
      flex-shrink: 0;
      width: var(--img-width);
      opacity: 0.375;
      scale: 0.925;
      transition: opacity var(--duration-1), scale var(--duration-1);
      cursor: pointer;
      
      &[data-view="true"] {
        opacity: 1;
        scale: 1;
        outline: var(--outline-size-2) var(--color-accent-300) solid;
        outline-offset: 5px;
        border-radius: 1.5rem;
      }
  
      img.poster {
        border-radius: 1.5rem;
      }
    }
  }
}


@layer queries {
  @media (width < 1300px) {
    .hero-section {
      grid-template-columns: repeat(5, 1fr);
    }

    .hero-movie {
      grid-column: 1 / 5;
    }

    .carousel {
      --img-width: 8rem;
      --gap: 0.75rem;
      grid-column: 5 / 6;
    }
  }

  @media (width < 1050px) {
    .hero-section {
      padding-inline: var(--space-6);
    }

    .hero-movie {
      grid-column: 1 / 5;
    }

    .carousel {
      display: none;
    }
  }
  
  @container grid-container (width < 800px) {
    .main-details {
      grid-column: 2 / 4;
    }

    .cast-name {
      font-size: 0.5rem;
    }

    .btns button {
      padding: 0.25cqw 2cqw;

      & svg {
        stroke-width: 1;
      }
    }
  }
}


@layer effects {
  .grid-container {
    & .bg-poster {
      width: 100%;
      height: 100%;
      position: absolute;
      z-index: var(--z-neg10);
      inset: 0;
      background-size: cover;
      background-position: 50% 50%;
      border-radius: 2.75rem;
      outline: 1.25px solid rgba(120, 77, 240, 0.15);
      outline-offset: 0;
      box-shadow: 0 2px 0.75rem rgb(20 23 26 / 55%);

      &::after {
        content: "";
        position: absolute;
        z-index: var(--z-10);
        inset: 0;
        background-image: linear-gradient(
          190deg,
          rgb(20 23 26 / 60%) 10%,
          rgb(20 23 26 / 90%) 95%
        );
        border-radius: inherit;
      }
    }

    & .ambient {
      position: absolute;
      z-index: var(--z-neg10);
      inset: -0.65rem;
      opacity: 0.6;
      filter: blur(30px) grayscale(0.3);
    }

    & .ambient img {
      width: 100%;
      height: 100%;
      object-position: center;
      border-radius: 2.75rem;
    }
  }
}
